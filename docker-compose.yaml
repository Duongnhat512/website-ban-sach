version: "3.7"
services:
  posgres-container:
    container_name: postgres-microservices
    image: postgres:13.3
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: authentication-service
    ports:
      - "5432:5432"
    networks:
      - BookStoreMicroservices
  pgadmin-container:
    container_name: pgadmin-microservices
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    networks:
      - BookStoreMicroservices

  kafka: 
    image: 'bitnami/kafka:3.7'
    container_name: kafka_microservice
    hostname: kafka_micro
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  redis-container-microservice:
    container_name: redis-container-microservice
    image: docker.io/redis:7.2.3
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    networks:
      - BookStoreMicroservices
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - BookStoreMicroservices
  elasticsearch-microservice:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    container_name: elasticsearch-microservice
    environment:
      - discovery.type=single-node
      - node.name=elastic-search
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "D:/elastic-data:/usr/share/elasticsearch/data"
    ports:
      - "9200:9200"
    networks:
      - BookStoreMicroservices
    restart: unless-stopped

  kibana-microservice:
    image: docker.elastic.co/kibana/kibana:8.15.3
    container_name: kibana-microservice
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - 'NODE_OPTIONS=--max-old-space-size=2048'
    ports:
      - "5601:5601"
    networks:
      - BookStoreMicroservices
    depends_on:
      - elasticsearch-microservice
    restart: unless-stopped
networks:
  BookStoreMicroservices:
    driver: bridge
volumes:
  redis-data:

